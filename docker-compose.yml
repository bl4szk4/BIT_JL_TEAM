services:
  db:
    container_name: bit_db
    build:
      context: ./
      dockerfile: deployment/postgres/Dockerfile
    env_file:
      - ./app/config/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  web:
    container_name: bit_backend
    build:
      context: ./
      dockerfile: deployment/django/Dockerfile
    command: python -Wd /app/manage.py runserver 0.0.0.0:8000
    environment:
      - DJANGO_SETTINGS_MODULE=bit_app.settings
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./app/config/.env
    restart: always

  redis:
    container_name: bit_redis
    image: redis:7-alpine
    command: >
      /bin/sh -c "redis-server
      --requirepass $$REDIS_PASSWORD
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru"
    env_file: ./app/config/.env
    expose:
      - 6379
    restart: always

  celery_worker_default: &default_celery_worker
    container_name: bit_celery_worker
    build:
      context: ./  # Punkt budowania Dockerfile
      dockerfile: deployment/django/Dockerfile
      args:
        ENV: development
    env_file: ./app/config/.env
    command: celery -A bit_app worker -l info --uid=nobody --gid=nogroup
    environment:
      - DJANGO_SETTINGS_MODULE=bit_app.settings.base
    volumes:
      - ./app:/backend/app
    restart: always
    depends_on:
      - db
      - redis

  celery_beat:
    <<: *default_celery_worker
    container_name: bit_celery_beat
    command: celery -A bit_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --uid=nobody --gid=nogroup
    environment:
      - DJANGO_SETTINGS_MODULE=bit_app.settings.base
    depends_on:
      - db
      - redis
      - celery_worker_default


volumes:
  postgres_data:
